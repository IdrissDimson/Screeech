{"ast":null,"code":"var _jsxFileName = \"/Users/idrissdimson/Downloads/Screeech/screech-client/src/pages/user.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Screech from '../components/screech/Screech';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\nimport ScreechSkeleton from '../util/ScreechSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null,\n      screechIdParam: null\n    };\n  }\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screechId = this.props.match.params.screechId;\n    if (screechId) this.setState({\n      screechIdParam: screechId\n    });\n    this.props.getUserData(handle);\n    axios.get(`/user/${handle}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$props$data = this.props.data,\n          screechs = _this$props$data.screechs,\n          loading = _this$props$data.loading;\n    const screechIdParam = this.state.screechIdParam;\n    const screechsMarkup = loading ? React.createElement(ScreechSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : screechs === null ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" No Screechs from this user \") : !screechIdParam ? screechs.map(screech => React.createElement(Screech, {\n      key: screech.screechId,\n      screech: screech,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })) : screechs.map(screech => {\n      if (screech.screechId !== screechIdParam) return React.createElement(Screech, {\n        key: screech.screechId,\n        screech: screech,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });else return React.createElement(Screech, {\n        key: screech.screechId,\n        screech: screech,\n        openDialog: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    });\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.profile === null ? React.createElement(ProfileSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(StaticProfile, {\n      profile: this.state.profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, screechsMarkup));\n  }\n\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["/Users/idrissdimson/Downloads/Screeech/screech-client/src/pages/user.js"],"names":["React","Component","PropTypes","axios","Screech","StaticProfile","Grid","ScreechSkeleton","ProfileSkeleton","connect","getUserData","user","state","profile","screechIdParam","componentDidMount","handle","props","match","params","screechId","setState","get","then","res","data","catch","err","console","log","render","screechs","loading","screechsMarkup","map","screech","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Screech from '../components/screech/Screech';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\n\nimport ScreechSkeleton from '../util/ScreechSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nclass user extends Component {\n  state = {\n    profile: null,\n    screechIdParam: null\n  };\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    const screechId = this.props.match.params.screechId;\n\n    if (screechId) this.setState({ screechIdParam: screechId });\n\n    this.props.getUserData(handle);\n\n    axios\n      .get(`/user/${handle}`)\n      .then(res => {\n        this.setState({\n          profile: res.data.user\n        });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const { screechs, loading } = this.props.data;\n    const { screechIdParam } = this.state;\n\n    const screechsMarkup = loading ? (\n      <ScreechSkeleton />\n    ) : screechs === null ? (\n      <p> No Screechs from this user </p>\n    ) : !screechIdParam ? (\n      screechs.map(screech => (\n        <Screech key={screech.screechId} screech={screech} />\n      ))\n    ) : (\n      screechs.map(screech => {\n        if (screech.screechId !== screechIdParam)\n          return <Screech key={screech.screechId} screech={screech} />;\n        else\n          return (\n            <Screech key={screech.screechId} screech={screech} openDialog />\n          );\n      })\n    );\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item sm={4} xs={12}>\n          {this.state.profile === null ? (\n            <ProfileSkeleton />\n          ) : (\n            <StaticProfile profile={this.state.profile} />\n          )}\n        </Grid>\n        <Grid item sm={8} xs={12}>\n          {screechsMarkup}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, { getUserData })(user);\n"]},"metadata":{},"sourceType":"module"}