{"ast":null,"code":"var _jsxFileName = \"/Users/idrissdimson/Downloads/Screeech/screech-client/src/components/screech/Screech.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteScreech from './DeleteScreech';\nimport ScreechDialog from './ScreechDialog';\nimport LikeButton from './LikeButton'; // MUI Stuff\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux\n\nimport { connect } from 'react-redux';\nconst styles = {\n  card: {\n    // display: 'flex',\n    width: 'auto',\n    marginBottom: 20,\n    borderWidth: 'medium'\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n  },\n  content: {\n    padding: 25 // objectFit: 'cover'\n\n  },\n  cardContent: {\n    width: 'auto',\n    flexDirection: 'column'\n  }\n};\n\nclass Screech extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$screech = _this$props.screech,\n          body = _this$props$screech.body,\n          createdAt = _this$props$screech.createdAt,\n          userImage = _this$props$screech.userImage,\n          userHandle = _this$props$screech.userHandle,\n          screechId = _this$props$screech.screechId,\n          likeCount = _this$props$screech.likeCount,\n          commentCount = _this$props$screech.commentCount,\n          _this$props$user = _this$props.user,\n          authenticated = _this$props$user.authenticated,\n          handle = _this$props$user.credentials.handle;\n    const deleteButton = authenticated && userHandle === handle ? React.createElement(DeleteScreech, {\n      screechId: screechId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }) : null;\n    return React.createElement(Card, {\n      className: classes.card,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      avatar: React.createElement(Avatar, {\n        alt: userHandle,\n        src: userImage,\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      action: React.createElement(ScreechDialog, {\n        screechId: screechId,\n        userHandle: userHandle,\n        openDialog: this.props.openDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      title: React.createElement(Typography, {\n        component: Link,\n        to: `/${userHandle}`,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, userHandle),\n      subheader: dayjs(createdAt).fromNow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, body)), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(LikeButton, {\n      screechId: screechId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, likeCount, \" Likes\"), React.createElement(Link, {\n      to: `/${userHandle}/screech/${screechId}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ChatIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, commentCount, \" comments\"), deleteButton));\n  }\n\n}\n\nScreech.propTypes = {\n  user: PropTypes.object.isRequired,\n  screech: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Screech));","map":{"version":3,"sources":["/Users/idrissdimson/Downloads/Screeech/screech-client/src/components/screech/Screech.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","PropTypes","MyButton","DeleteScreech","ScreechDialog","LikeButton","Avatar","Card","CardHeader","CardActions","CardContent","Typography","ChatIcon","connect","styles","card","width","marginBottom","borderWidth","image","height","borderRadius","content","padding","cardContent","flexDirection","Screech","render","extend","props","classes","screech","body","createdAt","userImage","userHandle","screechId","likeCount","commentCount","user","authenticated","handle","credentials","deleteButton","openDialog","fromNow","propTypes","object","isRequired","bool","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteScreech from './DeleteScreech';\nimport ScreechDialog from './ScreechDialog';\nimport LikeButton from './LikeButton';\n// MUI Stuff\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux\nimport { connect } from 'react-redux';\n\nconst styles = {\n  card: {\n    // display: 'flex',\n    width: 'auto',\n    marginBottom: 20,\n    borderWidth: 'medium'\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n  },\n  content: {\n    padding: 25\n    // objectFit: 'cover'\n  },\n  cardContent: {\n    width: 'auto',\n    flexDirection: 'column'\n  }\n};\n\nclass Screech extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      screech: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screechId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: { handle }\n      }\n    } = this.props;\n\n    const deleteButton =\n      authenticated && userHandle === handle ? (\n        <DeleteScreech screechId={screechId} />\n      ) : null;\n    return (\n      <Card className={classes.card} variant='outlined'>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt={userHandle}\n              src={userImage}\n              className={classes.image}\n            />\n          }\n          action={\n            <ScreechDialog\n              screechId={screechId}\n              userHandle={userHandle}\n              openDialog={this.props.openDialog}\n            />\n          }\n          title={\n            <Typography component={Link} to={`/${userHandle}`} color='primary'>\n              {userHandle}\n            </Typography>\n          }\n          subheader={dayjs(createdAt).fromNow()}\n        />\n\n        <CardContent className={classes.content}>\n          <Typography variant='body1'>{body}</Typography>\n        </CardContent>\n        <CardActions>\n          <LikeButton screechId={screechId} />\n          <span>{likeCount} Likes</span>\n          <Link to={`/${userHandle}/screech/${screechId}`}>\n            <MyButton tip='comments'>\n              <ChatIcon color='primary' />\n            </MyButton>\n          </Link>\n          <span>{commentCount} comments</span>\n          {deleteButton}\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nScreech.propTypes = {\n  user: PropTypes.object.isRequired,\n  screech: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Screech));\n"]},"metadata":{},"sourceType":"module"}