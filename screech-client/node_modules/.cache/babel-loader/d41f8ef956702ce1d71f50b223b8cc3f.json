{"ast":null,"code":"import _slicedToArray from \"/Users/idrissdimson/Downloads/Screeech/screech-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/idrissdimson/Downloads/Screeech/screech-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/idrissdimson/Downloads/Screeech/screech-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/idrissdimson/Downloads/Screeech/screech-client/src/components/screech/ScreechDialog.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; // MUI Stuff\n\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { getScreech, clearErrors } from '../../redux/actions/dataActions';\n\nconst styles = theme => _objectSpread({}, theme.spreadIt, {\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  profileImage: {\n    maxWidth: 80,\n    height: 80,\n    borderRadius: '50%',\n    objectFit: 'cover'\n  },\n  imageDiv: {},\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    float: 'right'\n  },\n  expandButton: {// position: 'absolute',\n    // left: '90%'\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  linkButton: {\n    color: theme.palette.primary.main\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose,\n        userImage = props.userImage,\n        subheader = props.subheader,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\", \"userImage\", \"subheader\"]);\n\n  return React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    avatar: React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    action: React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: onClose,\n      tipClassName: classes.closeButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })),\n    title: React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, children),\n    subheader: subheader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    justifyContent: 'flex-start'\n  }\n}))(MuiDialogActions);\nconst ScreechDialog = withStyles(styles)(props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  let _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldPath = _useState4[0],\n      setOldPath = _useState4[1];\n\n  const classes = props.classes,\n        _props$screech = props.screech,\n        body = _props$screech.body,\n        createdAt = _props$screech.createdAt,\n        userImage = _props$screech.userImage,\n        userHandle = _props$screech.userHandle,\n        screechId = _props$screech.screechId,\n        likeCount = _props$screech.likeCount,\n        comments = _props$screech.comments,\n        commentCount = _props$screech.commentCount,\n        loading = props.UI.loading;\n\n  const handleOpen = () => {\n    let handleOldPath = window.location.pathname;\n    const userHandle = props.userHandle,\n          screechId = props.screechId;\n    const handleNewPath = `/${userHandle}/screech/${screechId}`;\n    if (handleOldPath === handleNewPath) handleOldPath = `/${userHandle}`;\n    window.history.pushState(null, null, handleNewPath);\n    setOpen(true);\n    setOldPath(handleOldPath);\n    props.getScreech(props.screechId);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    window.history.pushState(null, null, oldPath);\n    props.clearErrors();\n  };\n\n  useEffect(() => {\n    if (props.openDialog) {\n      handleOpen();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  const dialogMarkup = loading ? React.createElement(\"div\", {\n    className: classes.spinnerDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    size: 200,\n    thickness: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    onClose: handleClose,\n    userImage: userImage,\n    subheader: dayjs(createdAt).format('h:mm a, MMMM DD YYYY'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: classes.linkButton,\n    to: `/${userHandle}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"@\", userHandle)), React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    className: classes.invisibleSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, body)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    screechId: screechId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, likeCount, \" likes\"), React.createElement(MyButton, {\n    tip: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(ChatIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, commentCount, \" comments\")), React.createElement(\"hr\", {\n    className: classes.visibleSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    screechId: screechId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(Comments, {\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(MyButton, {\n    onClick: handleOpen,\n    tip: \"Expand Screech\",\n    tipClassName: classes.expandButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(UnfoldMore, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, dialogMarkup));\n});\nScreechDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScreech: PropTypes.func.isRequired,\n  screechId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  screech: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  screech: state.data.screech,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScreech,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(ScreechDialog);","map":{"version":3,"sources":["/Users/idrissdimson/Downloads/Screeech/screech-client/src/components/screech/ScreechDialog.js"],"names":["React","useState","useEffect","Fragment","PropTypes","withStyles","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","CardHeader","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","CircularProgress","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScreech","clearErrors","styles","theme","spreadIt","root","margin","padding","spacing","profileImage","maxWidth","height","borderRadius","objectFit","imageDiv","dialogContent","closeButton","float","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","linkButton","color","palette","primary","main","DialogTitle","props","children","classes","onClose","userImage","subheader","other","DialogContent","DialogActions","justifyContent","ScreechDialog","open","setOpen","oldPath","setOldPath","screech","body","createdAt","userHandle","screechId","likeCount","comments","commentCount","loading","UI","handleOpen","handleOldPath","window","location","pathname","handleNewPath","history","pushState","handleClose","openDialog","dialogMarkup","format","invisibleSeparator","visibleSeparator","propTypes","func","isRequired","string","object","mapStateToProps","state","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n// MUI Stuff\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { getScreech, clearErrors } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({\n  ...theme.spreadIt,\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  profileImage: {\n    maxWidth: 80,\n    height: 80,\n    borderRadius: '50%',\n    objectFit: 'cover'\n  },\n  imageDiv: {},\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    float: 'right'\n  },\n  expandButton: {\n    // position: 'absolute',\n    // left: '90%'\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  linkButton: {\n    color: theme.palette.primary.main\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, userImage, subheader, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <CardHeader\n        avatar={\n          <img src={userImage} alt='Profile' className={classes.profileImage} />\n        }\n        action={\n          <MyButton\n            tip='Close'\n            onClick={onClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </MyButton>\n        }\n        title={\n          <Typography variant='h5' color='textSecondary'>\n            {children}\n          </Typography>\n        }\n        subheader={subheader}\n      />\n    </MuiDialogTitle>\n  );\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    justifyContent: 'flex-start'\n  }\n}))(MuiDialogActions);\n\nconst ScreechDialog = withStyles(styles)(props => {\n  const [open, setOpen] = useState(false);\n  let [oldPath, setOldPath] = useState('');\n\n  const {\n    classes,\n    screech: {\n      body,\n      createdAt,\n      userImage,\n      userHandle,\n      screechId,\n      likeCount,\n      comments,\n      commentCount\n    },\n    UI: { loading }\n  } = props;\n\n  const handleOpen = () => {\n    let handleOldPath = window.location.pathname;\n\n    const { userHandle, screechId } = props;\n    const handleNewPath = `/${userHandle}/screech/${screechId}`;\n\n    if (handleOldPath === handleNewPath) handleOldPath = `/${userHandle}`;\n\n    window.history.pushState(null, null, handleNewPath);\n\n    setOpen(true);\n    setOldPath(handleOldPath);\n    props.getScreech(props.screechId);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    window.history.pushState(null, null, oldPath);\n    props.clearErrors();\n  };\n  useEffect(() => {\n    if (props.openDialog) {\n      handleOpen();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const dialogMarkup = loading ? (\n    <div className={classes.spinnerDiv}>\n      <CircularProgress size={200} thickness={2} />\n    </div>\n  ) : (\n    <div>\n      <DialogTitle\n        onClose={handleClose}\n        userImage={userImage}\n        subheader={dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n      >\n        {/* <div className={classes.imageDiv}>\n          <img src={userImage} alt='Profile' className={classes.profileImage} />\n        </div> */}\n        <Link className={classes.linkButton} to={`/${userHandle}`}>\n          @{userHandle}\n        </Link>\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent}>\n        <hr className={classes.invisibleSeparator} />\n        <Typography variant='body1'>{body}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <LikeButton screechId={screechId} />\n        <span>{likeCount} likes</span>\n        <MyButton tip='comments'>\n          <ChatIcon color='primary' />\n        </MyButton>\n        <span>{commentCount} comments</span>\n      </DialogActions>\n      <hr className={classes.visibleSeparator} />\n      <CommentForm screechId={screechId} />\n      <Comments comments={comments} />\n    </div>\n  );\n  return (\n    <Fragment>\n      <MyButton\n        onClick={handleOpen}\n        tip='Expand Screech'\n        tipClassName={classes.expandButton}\n      >\n        <UnfoldMore color='primary' />\n      </MyButton>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth='sm'>\n        {dialogMarkup}\n      </Dialog>\n    </Fragment>\n  );\n});\n\nScreechDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScreech: PropTypes.func.isRequired,\n  screechId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  screech: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  screech: state.data.screech,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScreech,\n  clearErrors\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ScreechDialog);\n"]},"metadata":{},"sourceType":"module"}